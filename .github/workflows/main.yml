Certainly! To include the target triple `x86_64-apple-darwin_arm64` in the macOS artifact name, you can modify the `Upload artifact` step in the workflow file. Here's the updated version:

  ```yaml
  name: Build Executable
  
  on:
    push:
      branches:
        - main
  
  jobs:
    build:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]
          python-version: [3.9]
          macos-architecture: [universal2]  # Added macos-architecture field
      steps:
        - uses: actions/checkout@v2
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        - name: Build executable
          run: |
            pyinstaller --onefile server.py
          env:
            PYINSTALLER_PLATFORM: ${{ matrix.os }}
            MACOS_ARCH: ${{ matrix.macos-architecture }}  # Added MACOS_ARCH environment variable
        - name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
            if: matrix.os == 'ubuntu-latest'
            name: server-${{'x86_64-unknown-linux-gnu'}}
            if: matrix.os == 'macos-latest'
            name: server-${{'x86_64-apple-darwin_arm64'}}
            if: matrix.os == 'windows-latest'
            name: server-${{'x86_64-pc-windows-msvc'}}
            if: matrix.os == 'windows-latest'
            path: dist/server${{'.exe'}}
