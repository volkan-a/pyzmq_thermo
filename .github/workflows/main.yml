name: Build Executable

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.11]
        macos-architecture: [universal2] # Added macos-architecture field
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build executable
        run: |
          pyinstaller --onefile server.py
        env:
          PYINSTALLER_PLATFORM: ${{ matrix.os }}
          MACOS_ARCH: ${{ matrix.macos-architecture }} # Added MACOS_ARCH environment variable
      - name: Upload artifact for macos-latest
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          matrix.os: ${{ matrix.os }}
          name: server-x86_64-apple-darwin_arm64
          path: dist/server
      - name: Upload artifact for ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          matrix.os: ${{ matrix.os }}
          name: server-x86_64-unknown-linux-gnu
          path: dist/server
      - name: Upload artifact for windows-latest
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          matrix.os: ${{ matrix.os }}
          name: server-x86_64-pc-windows-msvc.exe
          path: dist/server.exe
